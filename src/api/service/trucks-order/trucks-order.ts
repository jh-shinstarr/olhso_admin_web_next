/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * OLHSO API
 * The OLHSO API description
 * OpenAPI spec version: 0.1
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  DeliveryStartOrFinishDto,
  OkResponseDto,
  OrderList,
  TruckOrderControllerFindManyByTruckIdParams
} from '../../model'



  /**
 * @summary 트럭 주문 목록 조회하기, Query를 통해서 Optional하게 배달지 목록 또는 배달 완료 목록을 요청합니다. orderItems로 주문 상세를 확인해주세요.
 */
export const truckOrderControllerFindManyByTruckId = <TData = AxiosResponse<OrderList>>(
    truckId: string,
    params: TruckOrderControllerFindManyByTruckIdParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/trucks/${truckId}/order`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary 주문의 배달완료 처리 유무를 판단합니다
 */
export const truckOrderControllerVerifyOrderForDelivery = <TData = AxiosResponse<OkResponseDto>>(
    truckId: string,
    orderId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/trucks/${truckId}/order/${orderId}/verify`,options
    );
  }
/**
 * @summary 주문의 배달 시작 또는 배달완료 처리하기, body의 requestType 값을 통해 구분합니다
 */
export const truckOrderControllerUpdateOrder = <TData = AxiosResponse<OkResponseDto>>(
    truckId: string,
    orderId: string,
    deliveryStartOrFinishDto: DeliveryStartOrFinishDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/olhso/trucks/${truckId}/order/${orderId}/status`,
      deliveryStartOrFinishDto,options
    );
  }
/**
 * @summary 주문의 배달지에 도착했을 때
 */
export const truckOrderControllerUpdateRealArrivalTime = <TData = AxiosResponse<OkResponseDto>>(
    truckId: string,
    orderId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/olhso/trucks/${truckId}/order/${orderId}/arrival`,undefined,options
    );
  }
/**
 * @summary 조리가 완료된 주문의 트레이 위치를 확인하기 위해 MQTT로 publish합니다
 */
export const truckOrderControllerPublishMqttForTrayLocation = <TData = AxiosResponse<OkResponseDto>>(
    truckId: string,
    orderId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/olhso/trucks/${truckId}/order/${orderId}/publish`,undefined,options
    );
  }
export type TruckOrderControllerFindManyByTruckIdResult = AxiosResponse<OrderList>
export type TruckOrderControllerVerifyOrderForDeliveryResult = AxiosResponse<OkResponseDto>
export type TruckOrderControllerUpdateOrderResult = AxiosResponse<OkResponseDto>
export type TruckOrderControllerUpdateRealArrivalTimeResult = AxiosResponse<OkResponseDto>
export type TruckOrderControllerPublishMqttForTrayLocationResult = AxiosResponse<OkResponseDto>
