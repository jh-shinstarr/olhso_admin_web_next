/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * OLHSO API
 * The OLHSO API description
 * OpenAPI spec version: 0.1
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import type {
  Order,
  TruckDriver,
  TruckDriverControllerFindManyDrivingTruckIdParams,
  TruckDriverControllerFindManyParams,
  TruckDriverControllerFindTodayOrdersParams,
  TruckDriverControllerFindTodayTotalTipsParams,
  TruckDriverDriving,
  TruckDriverDrivingList,
  TruckDriverList,
  TruckDriverWithPausedAssignmentDto
} from '../../model'



  /**
 * @summary 트럭 운전자의 내 정보 조회
 */
export const truckDriverControllerFindMe = <TData = AxiosResponse<TruckDriverWithPausedAssignmentDto>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/me`,options
    );
  }
/**
 * @summary 트럭 운전자의 오늘의 주문 목록 조회
 */
export const truckDriverControllerFindTodayOrders = <TData = AxiosResponse<Order[]>>(
    params: TruckDriverControllerFindTodayOrdersParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/me/today-orders`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary 트럭 운전자의 오늘의 total tip 조회
 */
export const truckDriverControllerFindTodayTotalTips = <TData = AxiosResponse<number>>(
    params: TruckDriverControllerFindTodayTotalTipsParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/me/today-tips`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary 기존의 주문만 처리, 더 이상 트럭에 주문을 받지 않음을 트럭 운전자가 요청
 */
export const truckDriverControllerNoNewOrders = <TData = AxiosResponse<TruckDriverDriving>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/olhso/truck-drivers/me/driving/no-new-orders`,undefined,options
    );
  }
/**
 * @summary 트럭 운전자의 내 운행 시작
 */
export const truckDriverControllerStartDriving = <TData = AxiosResponse<TruckDriverDriving>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/olhso/truck-drivers/me/driving`,undefined,options
    );
  }
/**
 * @summary 트럭 운전자의 내 운행 종료
 */
export const truckDriverControllerFinishDriving = <TData = AxiosResponse<TruckDriverDriving>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/olhso/truck-drivers/me/driving`,options
    );
  }
/**
 * @summary 트럭 운전자의 내 운행내역 조회
 */
export const truckDriverControllerFindManyDrivingTruckId = <TData = AxiosResponse<TruckDriverDrivingList>>(
    params?: TruckDriverControllerFindManyDrivingTruckIdParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/me/driving`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary 트럭 운전자의 내 운행내역 상세 조회
 */
export const truckDriverControllerFindOneDriving = <TData = AxiosResponse<TruckDriverDrivingList>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/me/driving/${id}`,options
    );
  }
/**
 * @summary 트럭 운전자 목록 조회
 */
export const truckDriverControllerFindMany = <TData = AxiosResponse<TruckDriverList>>(
    params?: TruckDriverControllerFindManyParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }
/**
 * @summary 단일 트럭 운전자 조회
 */
export const truckDriverControllerFindOne = <TData = AxiosResponse<TruckDriver>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/olhso/truck-drivers/${id}`,options
    );
  }
export type TruckDriverControllerFindMeResult = AxiosResponse<TruckDriverWithPausedAssignmentDto>
export type TruckDriverControllerFindTodayOrdersResult = AxiosResponse<Order[]>
export type TruckDriverControllerFindTodayTotalTipsResult = AxiosResponse<number>
export type TruckDriverControllerNoNewOrdersResult = AxiosResponse<TruckDriverDriving>
export type TruckDriverControllerStartDrivingResult = AxiosResponse<TruckDriverDriving>
export type TruckDriverControllerFinishDrivingResult = AxiosResponse<TruckDriverDriving>
export type TruckDriverControllerFindManyDrivingTruckIdResult = AxiosResponse<TruckDriverDrivingList>
export type TruckDriverControllerFindOneDrivingResult = AxiosResponse<TruckDriverDrivingList>
export type TruckDriverControllerFindManyResult = AxiosResponse<TruckDriverList>
export type TruckDriverControllerFindOneResult = AxiosResponse<TruckDriver>
